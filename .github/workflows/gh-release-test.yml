name: Version Check and Tag

on:
  push:
    branches:
      - "*"

jobs:
  version_check_and_tag:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Current Versions
        id: set_versions
        run: |
          CURRENT_VERSIONS=""
          for package_json in $(find ./packages -name package.json); do
            version=$(jq -r .version $package_json)
            CURRENT_VERSIONS="${CURRENT_VERSIONS}${version},"
          done
          CURRENT_VERSIONS=${CURRENT_VERSIONS%,} # Remove trailing comma
          echo "CURRENT_VERSIONS=${CURRENT_VERSIONS}" >> $GITHUB_ENV

      - name: Tag Check
        id: tag_check
        run: |
          for version in $(echo $CURRENT_VERSIONS | tr ',' ' '); do
            GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${version}"
            http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
              -H "Authorization: token ${GITHUB_TOKEN}")
            if [ "$http_status_code" -ne "404" ] ; then
              echo "::set-output name=exists_tag::true"
            else
              echo "::set-output name=exists_tag::false"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git Tags
        if: steps.tag_check.outputs.exists_tag == 'true'
        run: |
          for version in $(echo $CURRENT_VERSIONS | tr ',' ' '); do
            echo $version
          done

      - name: Run Version Check and Tag for Each Version
        run: |
          for version in $(echo $CURRENT_VERSIONS | tr ',' ' '); do
            echo "Creating job for version $version..."
            echo "::set-output name=version::$version"
          done

      - name: Create Release
        if: steps.set_versions.outcome == 'success'
        run: |
          echo "Running release job for individual tag ${{ steps.set_versions.outputs.version }}"
